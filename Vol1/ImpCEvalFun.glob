DIGEST 6fe745d4b2a23cb5ef9ef377fa6ef311
FLF.ImpCEvalFun
R533:535 Coq.micromega.Lia <> <> lib
R562:566 Coq.Arith.Arith <> <> lib
R593:600 Coq.Arith.PeanoNat <> <> lib
R610:612 Coq.Arith.PeanoNat Nat <> mod
R639:643 Coq.Arith.EqNat <> <> lib
R669:671 LF.Imp <> <> lib
R673:676 LF.Maps <> <> lib
def 782:792 <> ceval_step1
R800:804 LF.Imp <> state def
binder 795:796 <> st:1
R812:814 LF.Imp <> com ind
binder 808:808 <> c:2
R819:823 LF.Imp <> state def
R836:836 LF.ImpCEvalFun <> c:2 var
R849:851 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R856:858 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R852:855 LF.Imp <> :com:com_scope:'skip' not
R871:872 LF.ImpCEvalFun <> st:1 var
R880:882 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R890:892 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R884:887 LF.Imp <> :com:com_scope:x_':='_x not
R907:911 LF.Maps <> :::x_'!->'_x_';'_x not
R923:925 LF.Maps <> :::x_'!->'_x_';'_x not
R926:927 LF.ImpCEvalFun <> st:1 var
R912:916 LF.Imp <> aeval def
R918:919 LF.ImpCEvalFun <> st:1 var
R936:938 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R946:948 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R941:943 LF.Imp <> :com:com_scope:x_';'_x not
R972:982 LF.ImpCEvalFun <> ceval_step1:3 def
R984:985 LF.ImpCEvalFun <> st:1 var
binder 965:967 <> st':5
R1001:1011 LF.ImpCEvalFun <> ceval_step1:3 def
R1013:1015 LF.ImpCEvalFun <> st':5 var
R1026:1028 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R1053:1055 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R1029:1031 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R1033:1038 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R1041:1046 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R1049:1052 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R1072:1076 LF.Imp <> beval def
R1078:1079 LF.ImpCEvalFun <> st:1 var
R1132:1142 LF.ImpCEvalFun <> ceval_step1:3 def
R1144:1145 LF.ImpCEvalFun <> st:1 var
R1099:1109 LF.ImpCEvalFun <> ceval_step1:3 def
R1111:1112 LF.ImpCEvalFun <> st:1 var
R1156:1158 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R1177:1179 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R1159:1164 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R1167:1170 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R1173:1176 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R1192:1193 LF.ImpCEvalFun <> st:1 var
def 3206:3216 <> ceval_step2
R3224:3228 LF.Imp <> state def
binder 3219:3220 <> st:6
R3236:3238 LF.Imp <> com ind
binder 3232:3232 <> c:7
R3246:3248 Coq.Init.Datatypes <> nat ind
binder 3242:3242 <> i:8
R3253:3257 LF.Imp <> state def
R3270:3270 LF.ImpCEvalFun <> i:8 var
R3281:3281 Coq.Init.Datatypes <> O constr
R3286:3293 LF.Imp <> empty_st def
R3299:3299 Coq.Init.Datatypes <> S constr
R3317:3317 LF.ImpCEvalFun <> c:7 var
R3332:3334 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3339:3341 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3335:3338 LF.Imp <> :com:com_scope:'skip' not
R3356:3357 LF.ImpCEvalFun <> st:6 var
R3367:3369 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3377:3379 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3371:3374 LF.Imp <> :com:com_scope:x_':='_x not
R3396:3400 LF.Maps <> :::x_'!->'_x_';'_x not
R3412:3414 LF.Maps <> :::x_'!->'_x_';'_x not
R3415:3416 LF.ImpCEvalFun <> st:6 var
R3401:3405 LF.Imp <> aeval def
R3407:3408 LF.ImpCEvalFun <> st:6 var
R3427:3429 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3437:3439 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3432:3434 LF.Imp <> :com:com_scope:x_';'_x not
R3465:3475 LF.ImpCEvalFun <> ceval_step2:9 def
R3477:3478 LF.ImpCEvalFun <> st:6 var
binder 3458:3460 <> st':12
R3499:3509 LF.ImpCEvalFun <> ceval_step2:9 def
R3511:3513 LF.ImpCEvalFun <> st':12 var
R3529:3531 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3556:3558 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3532:3534 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R3536:3541 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R3544:3549 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R3552:3555 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R3577:3581 LF.Imp <> beval def
R3583:3584 LF.ImpCEvalFun <> st:6 var
R3644:3654 LF.ImpCEvalFun <> ceval_step2:9 def
R3656:3657 LF.ImpCEvalFun <> st:6 var
R3606:3616 LF.ImpCEvalFun <> ceval_step2:9 def
R3618:3619 LF.ImpCEvalFun <> st:6 var
R3673:3675 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3694:3696 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R3676:3681 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R3684:3687 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R3690:3693 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R3715:3719 LF.Imp <> beval def
R3721:3722 LF.ImpCEvalFun <> st:6 var
R3829:3830 LF.ImpCEvalFun <> st:6 var
R3754:3764 LF.ImpCEvalFun <> ceval_step2:9 def
R3766:3767 LF.ImpCEvalFun <> st:6 var
binder 3747:3749 <> st':13
R3793:3803 LF.ImpCEvalFun <> ceval_step2:9 def
R3809:3809 LF.ImpCEvalFun <> c:7 var
R3805:3807 LF.ImpCEvalFun <> st':13 var
def 4631:4641 <> ceval_step3
R4649:4653 LF.Imp <> state def
binder 4644:4645 <> st:14
R4661:4663 LF.Imp <> com ind
binder 4657:4657 <> c:15
R4671:4673 Coq.Init.Datatypes <> nat ind
binder 4667:4667 <> i:16
R4698:4703 Coq.Init.Datatypes <> option ind
R4705:4709 LF.Imp <> state def
R4722:4722 LF.ImpCEvalFun <> i:16 var
R4733:4733 Coq.Init.Datatypes <> O constr
R4738:4741 Coq.Init.Datatypes <> None constr
R4747:4747 Coq.Init.Datatypes <> S constr
R4765:4765 LF.ImpCEvalFun <> c:15 var
R4780:4782 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4787:4789 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4783:4786 LF.Imp <> :com:com_scope:'skip' not
R4804:4807 Coq.Init.Datatypes <> Some constr
R4809:4810 LF.ImpCEvalFun <> st:14 var
R4820:4822 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4830:4832 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4824:4827 LF.Imp <> :com:com_scope:x_':='_x not
R4847:4850 Coq.Init.Datatypes <> Some constr
R4854:4858 LF.Maps <> :::x_'!->'_x_';'_x not
R4870:4872 LF.Maps <> :::x_'!->'_x_';'_x not
R4873:4874 LF.ImpCEvalFun <> st:14 var
R4859:4863 LF.Imp <> aeval def
R4865:4866 LF.ImpCEvalFun <> st:14 var
R4885:4887 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4895:4897 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R4890:4892 LF.Imp <> :com:com_scope:x_';'_x not
R4919:4929 LF.ImpCEvalFun <> ceval_step3:17 def
R4931:4932 LF.ImpCEvalFun <> st:14 var
R4958:4961 Coq.Init.Datatypes <> Some constr
R4970:4980 LF.ImpCEvalFun <> ceval_step3:17 def
R5004:5007 Coq.Init.Datatypes <> None constr
R5012:5015 Coq.Init.Datatypes <> None constr
R5039:5041 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5066:5068 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5042:5044 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5046:5051 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5054:5059 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5062:5065 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R5087:5091 LF.Imp <> beval def
R5093:5094 LF.ImpCEvalFun <> st:14 var
R5154:5164 LF.ImpCEvalFun <> ceval_step3:17 def
R5166:5167 LF.ImpCEvalFun <> st:14 var
R5116:5126 LF.ImpCEvalFun <> ceval_step3:17 def
R5128:5129 LF.ImpCEvalFun <> st:14 var
R5183:5185 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5204:5206 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5186:5191 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R5194:5197 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R5200:5203 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R5225:5229 LF.Imp <> beval def
R5231:5232 LF.ImpCEvalFun <> st:14 var
R5401:5404 Coq.Init.Datatypes <> Some constr
R5406:5407 LF.ImpCEvalFun <> st:14 var
R5260:5270 LF.ImpCEvalFun <> ceval_step3:17 def
R5272:5273 LF.ImpCEvalFun <> st:14 var
R5304:5307 Coq.Init.Datatypes <> Some constr
R5316:5326 LF.ImpCEvalFun <> ceval_step3:17 def
R5332:5332 LF.ImpCEvalFun <> c:15 var
R5354:5357 Coq.Init.Datatypes <> None constr
R5362:5365 Coq.Init.Datatypes <> None constr
R5678:5681 Coq.Init.Datatypes <> Some constr
R5702:5705 Coq.Init.Datatypes <> None constr
R5710:5713 Coq.Init.Datatypes <> None constr
not 5618:5618 <> :::'LETOPT'_x_'<=='_x_'IN'_x
def 5776:5785 <> ceval_step
R5793:5797 LF.Imp <> state def
binder 5788:5789 <> st:20
R5805:5807 LF.Imp <> com ind
binder 5801:5801 <> c:21
R5815:5817 Coq.Init.Datatypes <> nat ind
binder 5811:5811 <> i:22
R5842:5847 Coq.Init.Datatypes <> option ind
R5849:5853 LF.Imp <> state def
R5866:5866 LF.ImpCEvalFun <> i:22 var
R5877:5877 Coq.Init.Datatypes <> O constr
R5882:5885 Coq.Init.Datatypes <> None constr
R5891:5891 Coq.Init.Datatypes <> S constr
R5909:5909 LF.ImpCEvalFun <> c:21 var
R5924:5926 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5931:5933 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5927:5930 LF.Imp <> :com:com_scope:'skip' not
R5948:5951 Coq.Init.Datatypes <> Some constr
R5953:5954 LF.ImpCEvalFun <> st:20 var
R5964:5966 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5974:5976 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R5968:5971 LF.Imp <> :com:com_scope:x_':='_x not
R5991:5994 Coq.Init.Datatypes <> Some constr
R5998:6002 LF.Maps <> :::x_'!->'_x_';'_x not
R6014:6016 LF.Maps <> :::x_'!->'_x_';'_x not
R6017:6018 LF.ImpCEvalFun <> st:20 var
R6003:6007 LF.Imp <> aeval def
R6009:6010 LF.ImpCEvalFun <> st:20 var
R6029:6031 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6039:6041 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6034:6036 LF.Imp <> :com:com_scope:x_';'_x not
R6056:6062 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R6066:6070 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R6090:6103 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R6071:6080 LF.ImpCEvalFun <> ceval_step:23 def
R6082:6083 LF.ImpCEvalFun <> st:20 var
binder 6063:6065 <> st':26
R6104:6113 LF.ImpCEvalFun <> ceval_step:23 def
R6115:6117 LF.ImpCEvalFun <> st':26 var
R6133:6135 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6160:6162 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6136:6138 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6140:6145 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6148:6153 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6156:6159 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6181:6185 LF.Imp <> beval def
R6187:6188 LF.ImpCEvalFun <> st:20 var
R6247:6256 LF.ImpCEvalFun <> ceval_step:23 def
R6258:6259 LF.ImpCEvalFun <> st:20 var
R6210:6219 LF.ImpCEvalFun <> ceval_step:23 def
R6221:6222 LF.ImpCEvalFun <> st:20 var
R6275:6277 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6296:6298 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6278:6283 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R6286:6289 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R6292:6295 LF.Imp <> :com:com_scope:'while'_x_'do'_x_'end' not
R6317:6321 LF.Imp <> beval def
R6323:6324 LF.ImpCEvalFun <> st:20 var
R6433:6436 Coq.Init.Datatypes <> Some constr
R6438:6439 LF.ImpCEvalFun <> st:20 var
R6345:6351 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R6355:6359 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R6379:6397 LF.ImpCEvalFun <> :::'LETOPT'_x_'<=='_x_'IN'_x not
R6360:6369 LF.ImpCEvalFun <> ceval_step:23 def
R6371:6372 LF.ImpCEvalFun <> st:20 var
binder 6352:6354 <> st':27
R6398:6407 LF.ImpCEvalFun <> ceval_step:23 def
R6413:6413 LF.ImpCEvalFun <> c:21 var
R6409:6411 LF.ImpCEvalFun <> st':27 var
def 6468:6477 <> test_ceval
R6483:6487 LF.Imp <> state def
binder 6480:6481 <> st:28
R6493:6495 LF.Imp <> com ind
binder 6491:6491 <> c:29
R6509:6518 LF.ImpCEvalFun <> ceval_step def
R6520:6521 LF.ImpCEvalFun <> st:28 var
R6523:6523 LF.ImpCEvalFun <> c:29 var
R6538:6541 Coq.Init.Datatypes <> None constr
R6549:6552 Coq.Init.Datatypes <> None constr
R6558:6561 Coq.Init.Datatypes <> Some constr
R6569:6572 Coq.Init.Datatypes <> Some constr
R6574:6574 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6579:6580 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6585:6586 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6591:6591 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6575:6576 LF.ImpCEvalFun <> st:28 var
R6578:6578 LF.Imp <> X def
R6581:6582 LF.ImpCEvalFun <> st:28 var
R6584:6584 LF.Imp <> Y def
R6587:6588 LF.ImpCEvalFun <> st:28 var
R6590:6590 LF.Imp <> Z def
def 6609:6626 <> example_test_ceval
R6746:6754 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6635:6644 LF.ImpCEvalFun <> test_ceval def
R6646:6653 LF.Imp <> empty_st def
R6661:6663 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6743:6745 LF.Imp <> ::com_scope:'<{'_x_'}>' not
R6670:6679 LF.Imp <> :com:com_scope:x_';'_x not
R6665:6668 LF.Imp <> :com:com_scope:x_':='_x not
R6664:6664 LF.Imp <> X def
R6680:6682 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6691:6704 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6711:6724 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6731:6742 LF.Imp <> :com:com_scope:'if'_x_'then'_x_'else'_x_'end' not
R6683:6683 LF.Imp <> :com:com_scope:'('_x_')' not
R6690:6690 LF.Imp <> :com:com_scope:'('_x_')' not
R6685:6688 LF.Imp <> :com::x_'<='_x not
R6684:6684 LF.Imp <> X def
R6706:6709 LF.Imp <> :com:com_scope:x_':='_x not
R6705:6705 LF.Imp <> Y def
R6726:6729 LF.Imp <> :com:com_scope:x_':='_x not
R6725:6725 LF.Imp <> Z def
R6755:6758 Coq.Init.Datatypes <> Some constr
R6760:6760 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6762:6763 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6765:6766 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6768:6768 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
def 7057:7064 <> pup_to_n
R7068:7070 LF.Imp <> com ind
def 7148:7157 <> pup_to_n_1
R7192:7196 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7163:7172 LF.ImpCEvalFun <> test_ceval def
R7176:7180 LF.Imp <> :::x_'!->'_x not
R7175:7175 LF.Imp <> X def
R7184:7191 LF.ImpCEvalFun <> pup_to_n prfax
R7197:7200 Coq.Init.Datatypes <> Some constr
R7202:7202 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7204:7205 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7208:7209 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7211:7211 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
prf 7863:7879 <> ceval_step__ceval
binder 7889:7889 <> c:30
binder 7891:7892 <> st:31
binder 7894:7896 <> st':32
R7905:7905 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7944:7954 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7906:7912 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7914:7915 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 7913:7913 <> i:33
R7933:7935 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7916:7925 LF.ImpCEvalFun <> ceval_step def
R7927:7928 LF.ImpCEvalFun <> st:31 var
R7930:7930 LF.ImpCEvalFun <> c:30 var
R7932:7932 LF.ImpCEvalFun <> i:33 var
R7936:7939 Coq.Init.Datatypes <> Some constr
R7941:7943 LF.ImpCEvalFun <> st':32 var
R7957:7960 LF.Imp <> :::x_'=['_x_']=>'_x not
R7962:7966 LF.Imp <> :::x_'=['_x_']=>'_x not
R7961:7961 LF.ImpCEvalFun <> c:30 var
R7955:7956 LF.ImpCEvalFun <> st:31 var
R7967:7969 LF.ImpCEvalFun <> st':32 var
R8351:8356 LF.Imp <> E_Skip constr
R8351:8356 LF.Imp <> E_Skip constr
R8382:8387 LF.Imp <> E_Asgn constr
R8382:8387 LF.Imp <> E_Asgn constr
R8438:8447 LF.ImpCEvalFun <> ceval_step def
R8438:8447 LF.ImpCEvalFun <> ceval_step def
R8539:8543 LF.Imp <> E_Seq constr
R8539:8543 LF.Imp <> E_Seq constr
R8747:8751 LF.Imp <> beval def
R8747:8751 LF.Imp <> beval def
R8810:8817 LF.Imp <> E_IfTrue constr
R8810:8817 LF.Imp <> E_IfTrue constr
R8923:8931 LF.Imp <> E_IfFalse constr
R8923:8931 LF.Imp <> E_IfFalse constr
R9026:9030 LF.Imp <> beval def
R9026:9030 LF.Imp <> beval def
R9093:9102 LF.ImpCEvalFun <> ceval_step def
R9093:9102 LF.ImpCEvalFun <> ceval_step def
R9170:9180 LF.Imp <> E_WhileTrue constr
R9170:9180 LF.Imp <> E_WhileTrue constr
R9449:9460 LF.Imp <> E_WhileFalse constr
R9449:9460 LF.Imp <> E_WhileFalse constr
def 9990:10027 <> manual_grade_for_ceval_step__ceval_inf
R10031:10036 Coq.Init.Datatypes <> option ind
R10042:10042 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R10039:10041 Coq.Init.Datatypes <> nat ind
R10043:10048 Coq.Strings.String <> string ind
R10054:10057 Coq.Init.Datatypes <> None constr
prf 10079:10093 <> ceval_step_more
binder 10103:10104 <> i1:34
binder 10106:10107 <> i2:35
binder 10109:10110 <> st:36
binder 10112:10114 <> st':37
binder 10116:10116 <> c:38
R10129:10134 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10123:10126 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R10121:10122 LF.ImpCEvalFun <> i1:34 var
R10127:10128 LF.ImpCEvalFun <> i2:35 var
R10164:10169 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10153:10155 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10135:10144 LF.ImpCEvalFun <> ceval_step def
R10146:10147 LF.ImpCEvalFun <> st:36 var
R10149:10149 LF.ImpCEvalFun <> c:38 var
R10151:10152 LF.ImpCEvalFun <> i1:34 var
R10156:10159 Coq.Init.Datatypes <> Some constr
R10161:10163 LF.ImpCEvalFun <> st':37 var
R10188:10190 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10170:10179 LF.ImpCEvalFun <> ceval_step def
R10181:10182 LF.ImpCEvalFun <> st:36 var
R10184:10184 LF.ImpCEvalFun <> c:38 var
R10186:10187 LF.ImpCEvalFun <> i2:35 var
R10191:10194 Coq.Init.Datatypes <> Some constr
R10196:10198 LF.ImpCEvalFun <> st':37 var
R10406:10409 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R10406:10409 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R10651:10660 LF.ImpCEvalFun <> ceval_step def
R10651:10660 LF.ImpCEvalFun <> ceval_step def
R10990:10994 LF.Imp <> beval def
R10990:10994 LF.Imp <> beval def
R11117:11121 LF.Imp <> beval def
R11117:11121 LF.Imp <> beval def
R11162:11171 LF.ImpCEvalFun <> ceval_step def
R11162:11171 LF.ImpCEvalFun <> ceval_step def
prf 11689:11705 <> ceval__ceval_step
binder 11715:11715 <> c:39
binder 11717:11718 <> st:40
binder 11720:11722 <> st':41
R11746:11755 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11733:11736 LF.Imp <> :::x_'=['_x_']=>'_x not
R11738:11742 LF.Imp <> :::x_'=['_x_']=>'_x not
R11737:11737 LF.ImpCEvalFun <> c:39 var
R11731:11732 LF.ImpCEvalFun <> st:40 var
R11743:11745 LF.ImpCEvalFun <> st':41 var
R11756:11762 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R11764:11765 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 11763:11763 <> i:42
R11783:11785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11766:11775 LF.ImpCEvalFun <> ceval_step def
R11777:11778 LF.ImpCEvalFun <> st:40 var
R11780:11780 LF.ImpCEvalFun <> c:39 var
R11782:11782 LF.ImpCEvalFun <> i:42 var
R11786:11789 Coq.Init.Datatypes <> Some constr
R11791:11793 LF.ImpCEvalFun <> st':41 var
prf 11893:11921 <> ceval_and_ceval_step_coincide
binder 11931:11931 <> c:43
binder 11933:11934 <> st:44
binder 11936:11938 <> st':45
R11962:11968 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11949:11952 LF.Imp <> :::x_'=['_x_']=>'_x not
R11954:11958 LF.Imp <> :::x_'=['_x_']=>'_x not
R11953:11953 LF.ImpCEvalFun <> c:43 var
R11947:11948 LF.ImpCEvalFun <> st:44 var
R11959:11961 LF.ImpCEvalFun <> st':45 var
R11969:11975 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R11977:11978 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 11976:11976 <> i:46
R11996:11998 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11979:11988 LF.ImpCEvalFun <> ceval_step def
R11990:11991 LF.ImpCEvalFun <> st:44 var
R11993:11993 LF.ImpCEvalFun <> c:43 var
R11995:11995 LF.ImpCEvalFun <> i:46 var
R11999:12002 Coq.Init.Datatypes <> Some constr
R12004:12006 LF.ImpCEvalFun <> st':45 var
R12050:12066 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12050:12066 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12075:12091 LF.ImpCEvalFun <> ceval_step__ceval thm
R12075:12091 LF.ImpCEvalFun <> ceval_step__ceval thm
prf 12406:12425 <> ceval_deterministic'
binder 12436:12436 <> c:47
binder 12438:12439 <> st:48
binder 12441:12443 <> st1:49
binder 12445:12447 <> st2:50
R12470:12478 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12457:12460 LF.Imp <> :::x_'=['_x_']=>'_x not
R12462:12466 LF.Imp <> :::x_'=['_x_']=>'_x not
R12461:12461 LF.ImpCEvalFun <> c:47 var
R12455:12456 LF.ImpCEvalFun <> st:48 var
R12467:12469 LF.ImpCEvalFun <> st1:49 var
R12494:12502 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12481:12484 LF.Imp <> :::x_'=['_x_']=>'_x not
R12486:12490 LF.Imp <> :::x_'=['_x_']=>'_x not
R12485:12485 LF.ImpCEvalFun <> c:47 var
R12479:12480 LF.ImpCEvalFun <> st:48 var
R12491:12493 LF.ImpCEvalFun <> st2:50 var
R12506:12508 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12503:12505 LF.ImpCEvalFun <> st1:49 var
R12509:12511 LF.ImpCEvalFun <> st2:50 var
R12560:12576 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12560:12576 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12594:12610 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12594:12610 LF.ImpCEvalFun <> ceval__ceval_step prfax
R12714:12716 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R12684:12698 LF.ImpCEvalFun <> ceval_step_more thm
R12714:12716 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R12684:12698 LF.ImpCEvalFun <> ceval_step_more thm
R12766:12768 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R12736:12750 LF.ImpCEvalFun <> ceval_step_more thm
R12766:12768 Coq.Init.Nat <> ::nat_scope:x_'+'_x not
R12736:12750 LF.ImpCEvalFun <> ceval_step_more thm
