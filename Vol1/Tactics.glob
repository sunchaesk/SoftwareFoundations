DIGEST 7645e65e4bcb155679102f8e5afa21e3
FLF.Tactics
R698:701 LF.Poly <> <> lib
prf 977:982 <> silly1
R1000:1002 Coq.Init.Datatypes <> nat ind
binder 994:994 <> n:1
binder 996:996 <> m:2
R1013:1018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1009:1011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1008:1008 LF.Tactics <> n:1 var
R1012:1012 LF.Tactics <> m:2 var
R1020:1022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1019:1019 LF.Tactics <> n:1 var
R1023:1023 LF.Tactics <> m:2 var
prf 1540:1545 <> silly2
R1567:1569 Coq.Init.Datatypes <> nat ind
binder 1557:1557 <> n:3
binder 1559:1559 <> m:4
binder 1561:1561 <> o:5
binder 1563:1563 <> p:6
R1580:1585 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1576:1578 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1575:1575 LF.Tactics <> n:3 var
R1579:1579 LF.Tactics <> m:4 var
R1586:1586 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1609:1615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1592:1595 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1588:1590 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1587:1587 LF.Tactics <> n:3 var
R1591:1591 LF.Tactics <> m:4 var
R1601:1603 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1596:1596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1598:1598 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1600:1600 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1597:1597 LF.Tactics <> n:3 var
R1599:1599 LF.Tactics <> o:5 var
R1604:1604 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1606:1606 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1608:1608 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1605:1605 LF.Tactics <> m:4 var
R1607:1607 LF.Tactics <> p:6 var
R1621:1623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1616:1616 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1618:1618 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1620:1620 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1617:1617 LF.Tactics <> n:3 var
R1619:1619 LF.Tactics <> o:5 var
R1624:1624 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1626:1626 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1628:1628 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1625:1625 LF.Tactics <> m:4 var
R1627:1627 LF.Tactics <> p:6 var
prf 2162:2168 <> silly2a
R2186:2188 Coq.Init.Datatypes <> nat ind
binder 2180:2180 <> n:7
binder 2182:2182 <> m:8
R2207:2213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2199:2201 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2194:2194 LF.Poly <> :::'('_x_','_x_')' not
R2196:2196 LF.Poly <> :::'('_x_','_x_')' not
R2198:2198 LF.Poly <> :::'('_x_','_x_')' not
R2195:2195 LF.Tactics <> n:7 var
R2197:2197 LF.Tactics <> n:7 var
R2202:2202 LF.Poly <> :::'('_x_','_x_')' not
R2204:2204 LF.Poly <> :::'('_x_','_x_')' not
R2206:2206 LF.Poly <> :::'('_x_','_x_')' not
R2203:2203 LF.Tactics <> m:8 var
R2205:2205 LF.Tactics <> m:8 var
R2214:2214 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2261:2267 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2229:2231 Coq.Init.Datatypes <> nat ind
binder 2223:2223 <> q:9
binder 2225:2225 <> r:10
R2248:2251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2240:2242 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2235:2235 LF.Poly <> :::'('_x_','_x_')' not
R2237:2237 LF.Poly <> :::'('_x_','_x_')' not
R2239:2239 LF.Poly <> :::'('_x_','_x_')' not
R2236:2236 LF.Tactics <> q:9 var
R2238:2238 LF.Tactics <> q:9 var
R2243:2243 LF.Poly <> :::'('_x_','_x_')' not
R2245:2245 LF.Poly <> :::'('_x_','_x_')' not
R2247:2247 LF.Poly <> :::'('_x_','_x_')' not
R2244:2244 LF.Tactics <> r:10 var
R2246:2246 LF.Tactics <> r:10 var
R2255:2257 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2252:2252 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2254:2254 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2253:2253 LF.Tactics <> q:9 var
R2258:2258 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2260:2260 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2259:2259 LF.Tactics <> r:10 var
R2271:2273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2268:2268 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2270:2270 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2269:2269 LF.Tactics <> n:7 var
R2274:2274 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2276:2276 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2275:2275 LF.Tactics <> m:8 var
prf 2475:2482 <> silly_ex
binder 2493:2493 <> p:11
R2498:2498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2544:2550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2506:2506 <> n:12
R2522:2525 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2515:2517 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2509:2512 LF.Basics <> even def
R2514:2514 LF.Tactics <> n:12 var
R2518:2521 LF.Basics <> true constr
R2536:2538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2526:2529 LF.Basics <> even def
R2532:2532 Coq.Init.Datatypes <> S constr
R2534:2534 LF.Tactics <> n:12 var
R2539:2543 LF.Basics <> false constr
R2551:2551 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2592:2598 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2559:2559 <> n:13
R2576:2579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2568:2570 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2562:2565 LF.Basics <> even def
R2567:2567 LF.Tactics <> n:13 var
R2571:2575 LF.Basics <> false constr
R2585:2587 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2580:2582 LF.Basics <> odd def
R2584:2584 LF.Tactics <> n:13 var
R2588:2591 LF.Basics <> true constr
R2612:2617 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2605:2607 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2599:2602 LF.Basics <> even def
R2604:2604 LF.Tactics <> p:11 var
R2608:2611 LF.Basics <> true constr
R2627:2629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2618:2620 LF.Basics <> odd def
R2623:2623 Coq.Init.Datatypes <> S constr
R2625:2625 LF.Tactics <> p:11 var
R2630:2633 LF.Basics <> true constr
prf 2937:2942 <> silly3
R2960:2962 Coq.Init.Datatypes <> nat ind
binder 2954:2954 <> n:14
binder 2956:2956 <> m:15
R2973:2978 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2969:2971 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2968:2968 LF.Tactics <> n:14 var
R2972:2972 LF.Tactics <> m:15 var
R2980:2982 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2979:2979 LF.Tactics <> m:15 var
R2983:2983 LF.Tactics <> n:14 var
prf 3590:3602 <> rev_exercise1
R3621:3624 LF.Poly <> list ind
R3626:3628 Coq.Init.Datatypes <> nat ind
binder 3614:3614 <> l:16
binder 3616:3617 <> l':17
R3644:3649 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3635:3637 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3634:3634 LF.Tactics <> l:16 var
R3638:3640 LF.Poly <> rev def
R3642:3643 LF.Tactics <> l':17 var
R3652:3654 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3650:3651 LF.Tactics <> l':17 var
R3655:3657 LF.Poly <> rev def
R3659:3659 LF.Tactics <> l:16 var
def 4166:4181 <> trans_eq_example
R4207:4209 Coq.Init.Datatypes <> nat ind
binder 4193:4193 <> a:18
binder 4195:4195 <> b:19
binder 4197:4197 <> c:20
binder 4199:4199 <> d:21
binder 4201:4201 <> e:22
binder 4203:4203 <> f:23
R4231:4239 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4223:4225 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4218:4218 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4220:4220 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4222:4222 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4219:4219 LF.Tactics <> a:18 var
R4221:4221 LF.Tactics <> b:19 var
R4226:4226 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4228:4228 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4230:4230 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4227:4227 LF.Tactics <> c:20 var
R4229:4229 LF.Tactics <> d:21 var
R4253:4261 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4245:4247 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4240:4240 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4242:4242 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4244:4244 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4241:4241 LF.Tactics <> c:20 var
R4243:4243 LF.Tactics <> d:21 var
R4248:4248 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4250:4250 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4252:4252 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4249:4249 LF.Tactics <> e:22 var
R4251:4251 LF.Tactics <> f:23 var
R4267:4269 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4262:4262 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4264:4264 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4266:4266 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4263:4263 LF.Tactics <> a:18 var
R4265:4265 LF.Tactics <> b:19 var
R4270:4270 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4272:4272 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4274:4274 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4271:4271 LF.Tactics <> e:22 var
R4273:4273 LF.Tactics <> f:23 var
prf 4534:4541 <> trans_eq
binder 4553:4553 <> X:24
R4570:4570 LF.Tactics <> X:24 var
binder 4562:4562 <> n:25
binder 4564:4564 <> m:26
binder 4566:4566 <> o:27
R4581:4584 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4577:4579 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4576:4576 LF.Tactics <> n:25 var
R4580:4580 LF.Tactics <> m:26 var
R4590:4593 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4586:4588 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4585:4585 LF.Tactics <> m:26 var
R4589:4589 LF.Tactics <> o:27 var
R4595:4597 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4594:4594 LF.Tactics <> n:25 var
R4598:4598 LF.Tactics <> o:27 var
def 4853:4869 <> trans_eq_example'
R4895:4897 Coq.Init.Datatypes <> nat ind
binder 4881:4881 <> a:28
binder 4883:4883 <> b:29
binder 4885:4885 <> c:30
binder 4887:4887 <> d:31
binder 4889:4889 <> e:32
binder 4891:4891 <> f:33
R4919:4927 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4911:4913 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4906:4906 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4908:4908 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4910:4910 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4907:4907 LF.Tactics <> a:28 var
R4909:4909 LF.Tactics <> b:29 var
R4914:4914 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4916:4916 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4918:4918 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4915:4915 LF.Tactics <> c:30 var
R4917:4917 LF.Tactics <> d:31 var
R4941:4949 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4933:4935 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4928:4928 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4930:4930 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4932:4932 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4929:4929 LF.Tactics <> c:30 var
R4931:4931 LF.Tactics <> d:31 var
R4936:4936 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4938:4938 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4940:4940 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4937:4937 LF.Tactics <> e:32 var
R4939:4939 LF.Tactics <> f:33 var
R4955:4957 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4950:4950 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4952:4952 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4954:4954 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4951:4951 LF.Tactics <> a:28 var
R4953:4953 LF.Tactics <> b:29 var
R4958:4958 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4960:4960 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4962:4962 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4959:4959 LF.Tactics <> e:32 var
R4961:4961 LF.Tactics <> f:33 var
R5435:5435 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5437:5437 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5439:5439 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5417:5424 LF.Tactics <> trans_eq thm
R5435:5435 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5437:5437 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5439:5439 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5417:5424 LF.Tactics <> trans_eq thm
def 5919:5936 <> trans_eq_example''
R5962:5964 Coq.Init.Datatypes <> nat ind
binder 5948:5948 <> a:34
binder 5950:5950 <> b:35
binder 5952:5952 <> c:36
binder 5954:5954 <> d:37
binder 5956:5956 <> e:38
binder 5958:5958 <> f:39
R5986:5994 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5978:5980 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5973:5973 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5975:5975 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5977:5977 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5974:5974 LF.Tactics <> a:34 var
R5976:5976 LF.Tactics <> b:35 var
R5981:5981 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5983:5983 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5985:5985 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5982:5982 LF.Tactics <> c:36 var
R5984:5984 LF.Tactics <> d:37 var
R6008:6016 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6000:6002 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5995:5995 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5997:5997 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5999:5999 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5996:5996 LF.Tactics <> c:36 var
R5998:5998 LF.Tactics <> d:37 var
R6003:6003 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6005:6005 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6007:6007 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6004:6004 LF.Tactics <> e:38 var
R6006:6006 LF.Tactics <> f:39 var
R6022:6024 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6017:6017 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6019:6019 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6021:6021 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6018:6018 LF.Tactics <> a:34 var
R6020:6020 LF.Tactics <> b:35 var
R6025:6025 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6027:6027 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6029:6029 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6026:6026 LF.Tactics <> e:38 var
R6028:6028 LF.Tactics <> f:39 var
R6084:6084 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6086:6086 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6088:6088 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6084:6084 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6086:6086 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6088:6088 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6201:6217 <> trans_eq_exercise
R6239:6241 Coq.Init.Datatypes <> nat ind
binder 6229:6229 <> n:40
binder 6231:6231 <> m:41
binder 6233:6233 <> o:42
binder 6235:6235 <> p:43
R6266:6274 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6251:6254 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6265:6265 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6250:6250 LF.Tactics <> m:41 var
R6255:6262 LF.Basics <> minustwo def
R6264:6264 LF.Tactics <> o:42 var
R6286:6294 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6275:6275 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6281:6284 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6277:6279 LF.Basics <> ::nat_scope:x_'+'_x not
R6276:6276 LF.Tactics <> n:40 var
R6280:6280 LF.Tactics <> p:43 var
R6285:6285 LF.Tactics <> m:41 var
R6295:6295 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6301:6305 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6316:6316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6297:6299 LF.Basics <> ::nat_scope:x_'+'_x not
R6296:6296 LF.Tactics <> n:40 var
R6300:6300 LF.Tactics <> p:43 var
R6306:6313 LF.Basics <> minustwo def
R6315:6315 LF.Tactics <> o:42 var
prf 7692:7702 <> S_injective
R7720:7722 Coq.Init.Datatypes <> nat ind
binder 7714:7714 <> n:44
binder 7716:7716 <> m:45
R7737:7742 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7731:7733 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7728:7728 Coq.Init.Datatypes <> S constr
R7730:7730 LF.Tactics <> n:44 var
R7734:7734 Coq.Init.Datatypes <> S constr
R7736:7736 LF.Tactics <> m:45 var
R7744:7746 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7743:7743 LF.Tactics <> n:44 var
R7747:7747 LF.Tactics <> m:45 var
R7789:7791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7792:7795 Coq.Init.Peano <> pred abbrev
R7798:7798 Coq.Init.Datatypes <> S constr
R7789:7791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7792:7795 Coq.Init.Peano <> pred abbrev
R7798:7798 Coq.Init.Datatypes <> S constr
prf 8287:8298 <> S_injective'
R8316:8318 Coq.Init.Datatypes <> nat ind
binder 8310:8310 <> n:46
binder 8312:8312 <> m:47
R8333:8338 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8327:8329 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8324:8324 Coq.Init.Datatypes <> S constr
R8326:8326 LF.Tactics <> n:46 var
R8330:8330 Coq.Init.Datatypes <> S constr
R8332:8332 LF.Tactics <> m:47 var
R8340:8342 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8339:8339 LF.Tactics <> n:46 var
R8343:8343 LF.Tactics <> m:47 var
prf 8847:8859 <> injection_ex1
R8879:8881 Coq.Init.Datatypes <> nat ind
binder 8871:8871 <> n:48
binder 8873:8873 <> m:49
binder 8875:8875 <> o:50
R8900:8905 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8892:8894 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8887:8887 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8889:8889 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8891:8891 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8888:8888 LF.Tactics <> n:48 var
R8890:8890 LF.Tactics <> m:49 var
R8895:8895 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8897:8897 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8899:8899 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R8896:8896 LF.Tactics <> o:50 var
R8898:8898 LF.Tactics <> o:50 var
R8907:8909 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8906:8906 LF.Tactics <> n:48 var
R8910:8910 LF.Tactics <> m:49 var
def 9095:9107 <> injection_ex3
binder 9119:9119 <> X:51
R9138:9138 LF.Tactics <> X:51 var
binder 9130:9130 <> x:52
binder 9132:9132 <> y:53
binder 9134:9134 <> z:54
R9148:9151 LF.Poly <> list ind
R9153:9153 LF.Tactics <> X:51 var
binder 9142:9142 <> l:55
binder 9144:9144 <> j:56
R9179:9184 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9170:9172 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9160:9163 LF.Poly <> :::x_'::'_x not
R9159:9159 LF.Tactics <> x:52 var
R9165:9168 LF.Poly <> :::x_'::'_x not
R9164:9164 LF.Tactics <> y:53 var
R9169:9169 LF.Tactics <> l:55 var
R9174:9177 LF.Poly <> :::x_'::'_x not
R9173:9173 LF.Tactics <> z:54 var
R9178:9178 LF.Tactics <> j:56 var
R9195:9200 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9186:9188 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9185:9185 LF.Tactics <> j:56 var
R9190:9193 LF.Poly <> :::x_'::'_x not
R9189:9189 LF.Tactics <> z:54 var
R9194:9194 LF.Tactics <> l:55 var
R9202:9204 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9201:9201 LF.Tactics <> x:52 var
R9205:9205 LF.Tactics <> y:53 var
prf 9950:9965 <> discriminate_ex1
R9983:9985 Coq.Init.Datatypes <> nat ind
binder 9977:9977 <> n:57
binder 9979:9979 <> m:58
R10003:10008 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9996:9998 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9991:9995 LF.Basics <> false constr
R9999:10002 LF.Basics <> true constr
R10010:10012 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10009:10009 LF.Tactics <> n:57 var
R10013:10013 LF.Tactics <> m:58 var
prf 10079:10094 <> discriminate_ex2
R10110:10112 Coq.Init.Datatypes <> nat ind
binder 10106:10106 <> n:59
R10125:10130 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10121:10123 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10118:10118 Coq.Init.Datatypes <> S constr
R10120:10120 LF.Tactics <> n:59 var
R10124:10124 Coq.Init.Datatypes <> O constr
R10136:10138 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10132:10134 LF.Basics <> ::nat_scope:x_'+'_x not
def 10962:10977 <> discriminate_ex3
binder 10991:10991 <> X:60
R11010:11010 LF.Tactics <> X:60 var
binder 11002:11002 <> x:61
binder 11004:11004 <> y:62
binder 11006:11006 <> z:63
R11020:11023 LF.Poly <> list ind
R11025:11025 LF.Tactics <> X:60 var
binder 11014:11014 <> l:64
binder 11016:11016 <> j:65
R11049:11056 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11044:11046 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11034:11037 LF.Poly <> :::x_'::'_x not
R11033:11033 LF.Tactics <> x:61 var
R11039:11042 LF.Poly <> :::x_'::'_x not
R11038:11038 LF.Tactics <> y:62 var
R11043:11043 LF.Tactics <> l:64 var
R11047:11048 LF.Poly <> :::'['_']' not
R11058:11060 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11057:11057 LF.Tactics <> x:61 var
R11061:11061 LF.Tactics <> z:63 var
prf 11310:11316 <> eqb_0_l
binder 11327:11327 <> n:66
R11346:11349 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11339:11341 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11334:11337 LF.Basics <> ::nat_scope:x_'=?'_x not
R11338:11338 LF.Tactics <> n:66 var
R11342:11345 LF.Basics <> true constr
R11351:11353 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11350:11350 LF.Tactics <> n:66 var
prf 12236:12242 <> f_equal
binder 12254:12254 <> A:67
binder 12256:12256 <> B:68
R12271:12274 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12270:12270 LF.Tactics <> A:67 var
R12275:12275 LF.Tactics <> B:68 var
binder 12267:12267 <> f:69
R12284:12284 LF.Tactics <> A:67 var
binder 12279:12279 <> x:70
binder 12281:12281 <> y:71
R12295:12298 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12291:12293 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12290:12290 LF.Tactics <> x:70 var
R12294:12294 LF.Tactics <> y:71 var
R12302:12304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12299:12299 LF.Tactics <> f:69 var
R12301:12301 LF.Tactics <> x:70 var
R12305:12305 LF.Tactics <> f:69 var
R12307:12307 LF.Tactics <> y:71 var
prf 12379:12399 <> eq_implies_succ_equal
R12417:12419 Coq.Init.Datatypes <> nat ind
binder 12411:12411 <> n:72
binder 12413:12413 <> m:73
R12430:12433 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12426:12428 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12425:12425 LF.Tactics <> n:72 var
R12429:12429 LF.Tactics <> m:73 var
R12437:12439 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12434:12434 Coq.Init.Datatypes <> S constr
R12436:12436 LF.Tactics <> n:72 var
R12440:12440 Coq.Init.Datatypes <> S constr
R12442:12442 LF.Tactics <> m:73 var
R12472:12478 LF.Tactics <> f_equal thm
R12472:12478 LF.Tactics <> f_equal thm
prf 12924:12945 <> eq_implies_succ_equal'
R12963:12965 Coq.Init.Datatypes <> nat ind
binder 12957:12957 <> n:74
binder 12959:12959 <> m:75
R12976:12979 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12972:12974 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12971:12971 LF.Tactics <> n:74 var
R12975:12975 LF.Tactics <> m:75 var
R12983:12985 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12980:12980 Coq.Init.Datatypes <> S constr
R12982:12982 LF.Tactics <> n:74 var
R12986:12986 Coq.Init.Datatypes <> S constr
R12988:12988 LF.Tactics <> m:75 var
prf 13471:13475 <> S_inj
R13493:13495 Coq.Init.Datatypes <> nat ind
binder 13487:13487 <> n:76
binder 13489:13489 <> m:77
R13503:13506 LF.Basics <> bool ind
binder 13499:13499 <> b:78
R13532:13538 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13512:13512 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13527:13530 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13513:13513 LF.Basics <> ::nat_scope:x_'=?'_x not
R13517:13522 LF.Basics <> ::nat_scope:x_'=?'_x not
R13526:13526 LF.Basics <> ::nat_scope:x_'=?'_x not
R13514:13514 Coq.Init.Datatypes <> S constr
R13516:13516 LF.Tactics <> n:76 var
R13523:13523 Coq.Init.Datatypes <> S constr
R13525:13525 LF.Tactics <> m:77 var
R13531:13531 LF.Tactics <> b:78 var
R13539:13539 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13546:13549 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13541:13544 LF.Basics <> ::nat_scope:x_'=?'_x not
R13540:13540 LF.Tactics <> n:76 var
R13545:13545 LF.Tactics <> m:77 var
R13550:13550 LF.Tactics <> b:78 var
prf 14381:14386 <> silly4
R14408:14410 Coq.Init.Datatypes <> nat ind
binder 14398:14398 <> n:79
binder 14400:14400 <> m:80
binder 14402:14402 <> p:81
binder 14404:14404 <> q:82
R14416:14416 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14431:14437 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14422:14425 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14418:14420 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14417:14417 LF.Tactics <> n:79 var
R14421:14421 LF.Tactics <> m:80 var
R14427:14429 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14426:14426 LF.Tactics <> p:81 var
R14430:14430 LF.Tactics <> q:82 var
R14443:14448 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14439:14441 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14438:14438 LF.Tactics <> m:80 var
R14442:14442 LF.Tactics <> n:79 var
R14450:14452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14449:14449 LF.Tactics <> q:82 var
R14453:14453 LF.Tactics <> p:81 var
prf 15763:15780 <> specialize_example
binder 15790:15790 <> n:83
R15798:15798 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15816:15822 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 15806:15806 <> m:84
R15812:15814 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15810:15810 LF.Basics <> ::nat_scope:x_'*'_x not
R15809:15809 LF.Tactics <> m:84 var
R15811:15811 LF.Tactics <> n:83 var
R15824:15826 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15823:15823 LF.Tactics <> n:83 var
R15905:15912 LF.Induction <> add_comm thm
R15905:15912 LF.Induction <> add_comm thm
R15905:15912 LF.Induction <> add_comm thm
def 16069:16087 <> trans_eq_example'''
R16113:16115 Coq.Init.Datatypes <> nat ind
binder 16099:16099 <> a:85
binder 16101:16101 <> b:86
binder 16103:16103 <> c:87
binder 16105:16105 <> d:88
binder 16107:16107 <> e:89
binder 16109:16109 <> f:90
R16137:16145 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16129:16131 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16124:16124 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16126:16126 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16128:16128 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16125:16125 LF.Tactics <> a:85 var
R16127:16127 LF.Tactics <> b:86 var
R16132:16132 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16134:16134 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16136:16136 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16133:16133 LF.Tactics <> c:87 var
R16135:16135 LF.Tactics <> d:88 var
R16159:16167 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16151:16153 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16146:16146 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16148:16148 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16150:16150 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16147:16147 LF.Tactics <> c:87 var
R16149:16149 LF.Tactics <> d:88 var
R16154:16154 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16156:16156 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16158:16158 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16155:16155 LF.Tactics <> e:89 var
R16157:16157 LF.Tactics <> f:90 var
R16173:16175 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16168:16168 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16170:16170 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16172:16172 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16169:16169 LF.Tactics <> a:85 var
R16171:16171 LF.Tactics <> b:86 var
R16176:16176 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16178:16178 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16180:16180 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16177:16177 LF.Tactics <> e:89 var
R16179:16179 LF.Tactics <> f:90 var
R16251:16251 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16253:16253 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16255:16255 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16233:16240 LF.Tactics <> trans_eq thm
R16251:16251 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16253:16253 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16255:16255 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16233:16240 LF.Tactics <> trans_eq thm
prf 17453:17475 <> double_injective_FAILED
binder 17486:17486 <> n:91
binder 17488:17488 <> m:92
R17512:17517 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17501:17503 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17493:17498 LF.Induction <> double def
R17500:17500 LF.Tactics <> n:91 var
R17504:17509 LF.Induction <> double def
R17511:17511 LF.Tactics <> m:92 var
R17519:17521 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17518:17518 LF.Tactics <> n:91 var
R17522:17522 LF.Tactics <> m:92 var
prf 20159:20174 <> double_injective
binder 20185:20185 <> n:93
binder 20187:20187 <> m:94
R20211:20216 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20200:20202 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20192:20197 LF.Induction <> double def
R20199:20199 LF.Tactics <> n:93 var
R20203:20208 LF.Induction <> double def
R20210:20210 LF.Tactics <> m:94 var
R20218:20220 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20217:20217 LF.Tactics <> n:93 var
R20221:20221 LF.Tactics <> m:94 var
prf 22145:22152 <> eqb_true
binder 22163:22163 <> n:95
binder 22165:22165 <> m:96
R22183:22186 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22176:22178 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22171:22174 LF.Basics <> ::nat_scope:x_'=?'_x not
R22170:22170 LF.Tactics <> n:95 var
R22175:22175 LF.Tactics <> m:96 var
R22179:22182 LF.Basics <> true constr
R22188:22190 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22187:22187 LF.Tactics <> n:95 var
R22191:22191 LF.Tactics <> m:96 var
def 22542:22572 <> manual_grade_for_informal_proof
R22576:22581 Coq.Init.Datatypes <> option ind
R22587:22587 LF.Poly <> ::type_scope:x_'*'_x not
R22584:22586 Coq.Init.Datatypes <> nat ind
R22588:22593 Coq.Strings.String <> string ind
R22599:22602 Coq.Init.Datatypes <> None constr
prf 22840:22857 <> plus_n_n_injective
binder 22868:22868 <> n:97
binder 22870:22870 <> m:98
R22888:22893 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22880:22882 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22876:22878 LF.Basics <> ::nat_scope:x_'+'_x not
R22875:22875 LF.Tactics <> n:97 var
R22879:22879 LF.Tactics <> n:97 var
R22884:22886 LF.Basics <> ::nat_scope:x_'+'_x not
R22883:22883 LF.Tactics <> m:98 var
R22887:22887 LF.Tactics <> m:98 var
R22895:22897 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22894:22894 LF.Tactics <> n:97 var
R22898:22898 LF.Tactics <> m:98 var
prf 23258:23286 <> double_injective_take2_FAILED
binder 23297:23297 <> n:99
binder 23299:23299 <> m:100
R23323:23328 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23312:23314 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23304:23309 LF.Induction <> double def
R23311:23311 LF.Tactics <> n:99 var
R23315:23320 LF.Induction <> double def
R23322:23322 LF.Tactics <> m:100 var
R23330:23332 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23329:23329 LF.Tactics <> n:99 var
R23333:23333 LF.Tactics <> m:100 var
prf 24573:24594 <> double_injective_take2
binder 24605:24605 <> n:101
binder 24607:24607 <> m:102
R24631:24636 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24620:24622 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24612:24617 LF.Induction <> double def
R24619:24619 LF.Tactics <> n:101 var
R24623:24628 LF.Induction <> double def
R24630:24630 LF.Tactics <> m:102 var
R24638:24640 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24637:24637 LF.Tactics <> n:101 var
R24641:24641 LF.Tactics <> m:102 var
prf 27253:27272 <> nth_error_after_last
R27287:27289 Coq.Init.Datatypes <> nat ind
binder 27283:27283 <> n:103
binder 27293:27293 <> X:104
R27308:27311 LF.Poly <> list ind
R27313:27313 LF.Tactics <> X:104 var
binder 27304:27304 <> l:105
R27331:27336 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27327:27329 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27319:27324 LF.Poly <> length def
R27326:27326 LF.Tactics <> l:105 var
R27330:27330 LF.Tactics <> n:103 var
R27350:27352 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27337:27345 LF.Poly <> nth_error def
R27349:27349 LF.Tactics <> n:103 var
R27347:27347 LF.Tactics <> l:105 var
R27353:27356 Coq.Init.Datatypes <> None constr
def 27732:27737 <> square
binder 27739:27739 <> n:106
R27745:27747 LF.Basics <> ::nat_scope:x_'*'_x not
R27744:27744 LF.Tactics <> n:106 var
R27748:27748 LF.Tactics <> n:106 var
prf 27818:27828 <> square_mult
binder 27839:27839 <> n:107
binder 27841:27841 <> m:108
R27858:27860 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27844:27849 LF.Tactics <> square def
R27853:27855 LF.Basics <> ::nat_scope:x_'*'_x not
R27852:27852 LF.Tactics <> n:107 var
R27856:27856 LF.Tactics <> m:108 var
R27869:27871 LF.Basics <> ::nat_scope:x_'*'_x not
R27861:27866 LF.Tactics <> square def
R27868:27868 LF.Tactics <> n:107 var
R27872:27877 LF.Tactics <> square def
R27879:27879 LF.Tactics <> m:108 var
R28193:28198 LF.Tactics <> square def
R28517:28526 LF.Induction <> mult_assoc prfax
R28517:28526 LF.Induction <> mult_assoc prfax
R28517:28526 LF.Induction <> mult_assoc prfax
R28552:28554 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28548:28550 LF.Basics <> ::nat_scope:x_'*'_x not
R28544:28546 LF.Basics <> ::nat_scope:x_'*'_x not
R28560:28562 LF.Basics <> ::nat_scope:x_'*'_x not
R28556:28558 LF.Basics <> ::nat_scope:x_'*'_x not
R28552:28554 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28548:28550 LF.Basics <> ::nat_scope:x_'*'_x not
R28544:28546 LF.Basics <> ::nat_scope:x_'*'_x not
R28560:28562 LF.Basics <> ::nat_scope:x_'*'_x not
R28556:28558 LF.Basics <> ::nat_scope:x_'*'_x not
R28581:28588 LF.Induction <> mul_comm prfax
R28581:28588 LF.Induction <> mul_comm prfax
R28581:28588 LF.Induction <> mul_comm prfax
R28597:28606 LF.Induction <> mult_assoc prfax
R28597:28606 LF.Induction <> mult_assoc prfax
R28632:28641 LF.Induction <> mult_assoc prfax
R28632:28641 LF.Induction <> mult_assoc prfax
R28632:28641 LF.Induction <> mult_assoc prfax
def 29028:29030 <> foo
R29036:29038 Coq.Init.Datatypes <> nat ind
binder 29033:29033 <> x:109
prf 29255:29266 <> silly_fact_1
binder 29277:29277 <> m:110
R29289:29291 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29285:29287 LF.Basics <> ::nat_scope:x_'+'_x not
R29280:29282 LF.Tactics <> foo def
R29284:29284 LF.Tactics <> m:110 var
R29303:29305 LF.Basics <> ::nat_scope:x_'+'_x not
R29292:29294 LF.Tactics <> foo def
R29298:29300 LF.Basics <> ::nat_scope:x_'+'_x not
R29297:29297 LF.Tactics <> m:110 var
def 29533:29535 <> bar
binder 29537:29537 <> x:111
R29550:29550 LF.Tactics <> x:111 var
R29561:29561 Coq.Init.Datatypes <> O constr
R29572:29572 Coq.Init.Datatypes <> S constr
prf 29646:29664 <> silly_fact_2_FAILED
binder 29675:29675 <> m:113
R29687:29689 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29683:29685 LF.Basics <> ::nat_scope:x_'+'_x not
R29678:29680 LF.Tactics <> bar def
R29682:29682 LF.Tactics <> m:113 var
R29701:29703 LF.Basics <> ::nat_scope:x_'+'_x not
R29690:29692 LF.Tactics <> bar def
R29696:29698 LF.Basics <> ::nat_scope:x_'+'_x not
R29695:29695 LF.Tactics <> m:113 var
prf 30690:30701 <> silly_fact_2
binder 30712:30712 <> m:114
R30724:30726 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30720:30722 LF.Basics <> ::nat_scope:x_'+'_x not
R30715:30717 LF.Tactics <> bar def
R30719:30719 LF.Tactics <> m:114 var
R30738:30740 LF.Basics <> ::nat_scope:x_'+'_x not
R30727:30729 LF.Tactics <> bar def
R30733:30735 LF.Basics <> ::nat_scope:x_'+'_x not
R30732:30732 LF.Tactics <> m:114 var
prf 31088:31100 <> silly_fact_2'
binder 31111:31111 <> m:115
R31123:31125 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31119:31121 LF.Basics <> ::nat_scope:x_'+'_x not
R31114:31116 LF.Tactics <> bar def
R31118:31118 LF.Tactics <> m:115 var
R31137:31139 LF.Basics <> ::nat_scope:x_'+'_x not
R31126:31128 LF.Tactics <> bar def
R31132:31134 LF.Basics <> ::nat_scope:x_'+'_x not
R31131:31131 LF.Tactics <> m:115 var
R31171:31173 LF.Tactics <> bar def
def 31818:31825 <> sillyfun
R31832:31834 Coq.Init.Datatypes <> nat ind
binder 31828:31828 <> n:116
R31839:31842 LF.Basics <> bool ind
R31853:31856 LF.Basics <> ::nat_scope:x_'=?'_x not
R31852:31852 LF.Tactics <> n:116 var
R31881:31884 LF.Basics <> ::nat_scope:x_'=?'_x not
R31880:31880 LF.Tactics <> n:116 var
R31905:31909 LF.Basics <> false constr
R31892:31896 LF.Basics <> false constr
R31864:31868 LF.Basics <> false constr
prf 31921:31934 <> sillyfun_false
R31950:31952 Coq.Init.Datatypes <> nat ind
binder 31946:31946 <> n:117
R31968:31970 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31958:31965 LF.Tactics <> sillyfun def
R31967:31967 LF.Tactics <> n:117 var
R31971:31975 LF.Basics <> false constr
R32004:32011 LF.Tactics <> sillyfun def
R32027:32030 LF.Basics <> ::nat_scope:x_'=?'_x not
R32027:32030 LF.Basics <> ::nat_scope:x_'=?'_x not
R32119:32122 LF.Basics <> ::nat_scope:x_'=?'_x not
R32119:32122 LF.Basics <> ::nat_scope:x_'=?'_x not
def 32995:32999 <> split
binder 33002:33002 <> X:118
binder 33004:33004 <> Y:119
R33019:33022 LF.Poly <> list ind
R33026:33026 LF.Poly <> ::type_scope:x_'*'_x not
R33025:33025 LF.Tactics <> X:118 var
R33027:33027 LF.Tactics <> Y:119 var
binder 33015:33015 <> l:120
R33048:33048 LF.Poly <> ::type_scope:x_'*'_x not
R33055:33059 LF.Poly <> ::type_scope:x_'*'_x not
R33066:33066 LF.Poly <> ::type_scope:x_'*'_x not
R33049:33052 LF.Poly <> list ind
R33054:33054 LF.Tactics <> X:118 var
R33060:33063 LF.Poly <> list ind
R33065:33065 LF.Tactics <> Y:119 var
R33079:33079 LF.Tactics <> l:120 var
R33090:33091 LF.Poly <> :::'['_']' not
R33096:33096 LF.Poly <> :::'('_x_','_x_')' not
R33099:33100 LF.Poly <> :::'('_x_','_x_')' not
R33103:33103 LF.Poly <> :::'('_x_','_x_')' not
R33097:33098 LF.Poly <> :::'['_']' not
R33101:33102 LF.Poly <> :::'['_']' not
R33115:33118 LF.Poly <> :::x_'::'_x not
R33109:33109 LF.Poly <> :::'('_x_','_x_')' not
R33111:33112 LF.Poly <> :::'('_x_','_x_')' not
R33114:33114 LF.Poly <> :::'('_x_','_x_')' not
R33136:33140 LF.Tactics <> split:121 def
R33157:33157 LF.Poly <> :::'('_x_','_x_')' not
R33160:33161 LF.Poly <> :::'('_x_','_x_')' not
R33164:33164 LF.Poly <> :::'('_x_','_x_')' not
R33169:33169 LF.Poly <> :::'('_x_','_x_')' not
R33177:33178 LF.Poly <> :::'('_x_','_x_')' not
R33186:33186 LF.Poly <> :::'('_x_','_x_')' not
R33171:33174 LF.Poly <> :::x_'::'_x not
R33180:33183 LF.Poly <> :::x_'::'_x not
prf 33296:33308 <> combine_split
binder 33319:33319 <> X:123
binder 33321:33321 <> Y:124
R33328:33331 LF.Poly <> list ind
R33335:33337 LF.Poly <> ::type_scope:x_'*'_x not
R33334:33334 LF.Tactics <> X:123 var
R33338:33338 LF.Tactics <> Y:124 var
binder 33324:33324 <> l:125
binder 33342:33343 <> l1:126
binder 33345:33346 <> l2:127
R33369:33374 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33358:33360 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33351:33355 LF.Tactics <> split def
R33357:33357 LF.Tactics <> l:125 var
R33361:33361 LF.Poly <> :::'('_x_','_x_')' not
R33364:33365 LF.Poly <> :::'('_x_','_x_')' not
R33368:33368 LF.Poly <> :::'('_x_','_x_')' not
R33362:33363 LF.Tactics <> l1:126 var
R33366:33367 LF.Tactics <> l2:127 var
R33388:33390 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33375:33381 LF.Poly <> combine def
R33386:33387 LF.Tactics <> l2:127 var
R33383:33384 LF.Tactics <> l1:126 var
R33391:33391 LF.Tactics <> l:125 var
def 33940:33948 <> sillyfun1
R33955:33957 Coq.Init.Datatypes <> nat ind
binder 33951:33951 <> n:128
R33962:33965 LF.Basics <> bool ind
R33976:33979 LF.Basics <> ::nat_scope:x_'=?'_x not
R33975:33975 LF.Tactics <> n:128 var
R34003:34006 LF.Basics <> ::nat_scope:x_'=?'_x not
R34002:34002 LF.Tactics <> n:128 var
R34026:34030 LF.Basics <> false constr
R34014:34017 LF.Basics <> true constr
R33987:33990 LF.Basics <> true constr
prf 34225:34244 <> sillyfun1_odd_FAILED
R34260:34262 Coq.Init.Datatypes <> nat ind
binder 34256:34256 <> n:129
R34286:34291 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34279:34281 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34268:34276 LF.Tactics <> sillyfun1 def
R34278:34278 LF.Tactics <> n:129 var
R34282:34285 LF.Basics <> true constr
R34297:34299 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34292:34294 LF.Basics <> odd def
R34296:34296 LF.Tactics <> n:129 var
R34300:34303 LF.Basics <> true constr
R34335:34343 LF.Tactics <> sillyfun1 def
R34365:34368 LF.Basics <> ::nat_scope:x_'=?'_x not
R34365:34368 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 35186:35198 <> sillyfun1_odd
R35214:35216 Coq.Init.Datatypes <> nat ind
binder 35210:35210 <> n:130
R35240:35245 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35233:35235 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35222:35230 LF.Tactics <> sillyfun1 def
R35232:35232 LF.Tactics <> n:130 var
R35236:35239 LF.Basics <> true constr
R35251:35253 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35246:35248 LF.Basics <> odd def
R35250:35250 LF.Tactics <> n:130 var
R35254:35257 LF.Basics <> true constr
R35289:35297 LF.Tactics <> sillyfun1 def
R35319:35322 LF.Basics <> ::nat_scope:x_'=?'_x not
R35319:35322 LF.Basics <> ::nat_scope:x_'=?'_x not
R35572:35579 LF.Tactics <> eqb_true prfax
R35572:35579 LF.Tactics <> eqb_true prfax
R35874:35877 LF.Basics <> ::nat_scope:x_'=?'_x not
R35874:35877 LF.Basics <> ::nat_scope:x_'=?'_x not
R35934:35941 LF.Tactics <> eqb_true prfax
R35934:35941 LF.Tactics <> eqb_true prfax
prf 36117:36138 <> bool_fn_applied_thrice
R36160:36163 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36156:36159 LF.Basics <> bool ind
R36164:36167 LF.Basics <> bool ind
binder 36152:36152 <> f:131
R36175:36178 LF.Basics <> bool ind
binder 36171:36171 <> b:132
R36195:36197 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36184:36184 LF.Tactics <> f:131 var
R36187:36187 LF.Tactics <> f:131 var
R36190:36190 LF.Tactics <> f:131 var
R36192:36192 LF.Tactics <> b:132 var
R36198:36198 LF.Tactics <> f:131 var
R36200:36200 LF.Tactics <> b:132 var
prf 38850:38856 <> eqb_sym
R38874:38876 Coq.Init.Datatypes <> nat ind
binder 38868:38868 <> n:133
binder 38870:38870 <> m:134
R38882:38882 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38889:38893 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38900:38900 Coq.Init.Logic <> ::type_scope:x_'='_x not
R38884:38887 LF.Basics <> ::nat_scope:x_'=?'_x not
R38883:38883 LF.Tactics <> n:133 var
R38888:38888 LF.Tactics <> m:134 var
R38895:38898 LF.Basics <> ::nat_scope:x_'=?'_x not
R38894:38894 LF.Tactics <> m:134 var
R38899:38899 LF.Tactics <> n:133 var
prf 39284:39292 <> eqb_trans
binder 39303:39303 <> n:135
binder 39305:39305 <> m:136
binder 39307:39307 <> p:137
R39325:39330 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39318:39320 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39313:39316 LF.Basics <> ::nat_scope:x_'=?'_x not
R39312:39312 LF.Tactics <> n:135 var
R39317:39317 LF.Tactics <> m:136 var
R39321:39324 LF.Basics <> true constr
R39344:39349 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R39337:39339 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39332:39335 LF.Basics <> ::nat_scope:x_'=?'_x not
R39331:39331 LF.Tactics <> m:136 var
R39336:39336 LF.Tactics <> p:137 var
R39340:39343 LF.Basics <> true constr
R39356:39358 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39351:39354 LF.Basics <> ::nat_scope:x_'=?'_x not
R39350:39350 LF.Tactics <> n:135 var
R39355:39355 LF.Tactics <> p:137 var
R39359:39362 LF.Basics <> true constr
def 39938:39960 <> split_combine_statement
prf 40134:40146 <> split_combine
R40150:40172 LF.Tactics <> split_combine_statement prfax
def 40263:40292 <> manual_grade_for_split_combine
R40296:40301 Coq.Init.Datatypes <> option ind
R40307:40307 LF.Poly <> ::type_scope:x_'*'_x not
R40304:40306 Coq.Init.Datatypes <> nat ind
R40308:40313 Coq.Strings.String <> string ind
R40319:40322 Coq.Init.Datatypes <> None constr
prf 40402:40416 <> filter_exercise
binder 40428:40428 <> X:138
R40447:40450 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40446:40446 LF.Tactics <> X:138 var
R40451:40454 LF.Basics <> bool ind
binder 40439:40442 <> test:139
R40495:40495 LF.Tactics <> X:138 var
binder 40491:40491 <> x:140
R40506:40509 LF.Poly <> list ind
R40511:40511 LF.Tactics <> X:138 var
binder 40499:40499 <> l:141
binder 40501:40502 <> lf:142
R40540:40545 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40530:40532 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40517:40522 LF.Poly <> filter def
R40529:40529 LF.Tactics <> l:141 var
R40524:40527 LF.Tactics <> test:139 var
R40534:40537 LF.Poly <> :::x_'::'_x not
R40533:40533 LF.Tactics <> x:140 var
R40538:40539 LF.Tactics <> lf:142 var
R40552:40554 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40546:40549 LF.Tactics <> test:139 var
R40551:40551 LF.Tactics <> x:140 var
R40555:40558 LF.Basics <> true constr
def 41497:41503 <> forallb
binder 41506:41506 <> X:143
R41525:41528 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41524:41524 LF.Tactics <> X:143 var
R41529:41532 LF.Basics <> bool ind
binder 41517:41520 <> test:144
R41540:41543 LF.Poly <> list ind
R41545:41545 LF.Tactics <> X:143 var
binder 41536:41536 <> l:145
R41550:41553 LF.Basics <> bool ind
def 41631:41644 <> test_forallb_1
R41671:41673 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41648:41654 LF.Tactics <> forallb prfax
R41660:41660 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41662:41662 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41664:41664 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41666:41666 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41668:41668 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41670:41670 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41656:41658 LF.Basics <> odd def
R41674:41677 LF.Basics <> true constr
def 41725:41738 <> test_forallb_2
R41768:41770 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41742:41748 LF.Tactics <> forallb prfax
R41755:41755 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41761:41761 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41767:41767 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41756:41760 LF.Basics <> false constr
R41762:41766 LF.Basics <> false constr
R41750:41753 LF.Basics <> negb def
R41771:41774 LF.Basics <> true constr
def 41822:41835 <> test_forallb_3
R41861:41863 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41839:41845 LF.Tactics <> forallb prfax
R41852:41852 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41854:41854 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41856:41856 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41858:41858 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41860:41860 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R41847:41850 LF.Basics <> even def
R41864:41868 LF.Basics <> false constr
def 41916:41929 <> test_forallb_4
R41951:41953 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41933:41939 LF.Tactics <> forallb prfax
R41949:41950 LF.Poly <> :::'['_']' not
R41942:41944 LF.Basics <> eqb def
R41954:41957 LF.Basics <> true constr
def 42006:42012 <> existsb
binder 42015:42015 <> X:147
R42034:42037 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42033:42033 LF.Tactics <> X:147 var
R42038:42041 LF.Basics <> bool ind
binder 42026:42029 <> test:148
R42049:42052 LF.Poly <> list ind
R42054:42054 LF.Tactics <> X:147 var
binder 42045:42045 <> l:149
R42059:42062 LF.Basics <> bool ind
def 42140:42153 <> test_existsb_1
R42182:42184 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42157:42163 LF.Tactics <> existsb prfax
R42173:42173 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42175:42175 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42177:42177 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42179:42179 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42181:42181 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42166:42168 LF.Basics <> eqb def
R42185:42189 LF.Basics <> false constr
def 42237:42250 <> test_existsb_2
R42291:42293 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42254:42260 LF.Tactics <> existsb prfax
R42274:42274 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42279:42279 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42284:42284 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42290:42290 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42275:42278 LF.Basics <> true constr
R42280:42283 LF.Basics <> true constr
R42285:42289 LF.Basics <> false constr
R42263:42266 LF.Basics <> andb def
R42268:42271 LF.Basics <> true constr
R42294:42297 LF.Basics <> true constr
def 42345:42358 <> test_existsb_3
R42387:42389 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42362:42368 LF.Tactics <> existsb prfax
R42374:42374 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42376:42376 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42378:42378 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42380:42380 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42382:42382 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42384:42384 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42386:42386 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R42370:42372 LF.Basics <> odd def
R42390:42393 LF.Basics <> true constr
def 42441:42454 <> test_existsb_4
R42473:42475 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42458:42464 LF.Tactics <> existsb prfax
R42471:42472 LF.Poly <> :::'['_']' not
R42466:42469 LF.Basics <> even def
R42476:42480 LF.Basics <> false constr
def 42531:42538 <> existsb'
binder 42541:42541 <> X:151
R42560:42563 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42559:42559 LF.Tactics <> X:151 var
R42564:42567 LF.Basics <> bool ind
binder 42552:42555 <> test:152
R42575:42578 LF.Poly <> list ind
R42580:42580 LF.Tactics <> X:151 var
binder 42571:42571 <> l:153
R42585:42588 LF.Basics <> bool ind
prf 42666:42681 <> existsb_existsb'
binder 42693:42693 <> X:154
R42712:42715 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42711:42711 LF.Tactics <> X:154 var
R42716:42719 LF.Basics <> bool ind
binder 42704:42707 <> test:155
R42727:42730 LF.Poly <> list ind
R42732:42732 LF.Tactics <> X:154 var
binder 42723:42723 <> l:156
R42752:42754 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42738:42744 LF.Tactics <> existsb prfax
R42751:42751 LF.Tactics <> l:156 var
R42746:42749 LF.Tactics <> test:155 var
R42755:42762 LF.Tactics <> existsb' prfax
R42769:42769 LF.Tactics <> l:156 var
R42764:42767 LF.Tactics <> test:155 var
